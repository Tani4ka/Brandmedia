@charset "UTF-8";
/*
Theme Name: S-Mitler
Author: Anonymous
Author URI:
Version: 1
Description: S-Mitler
License: GNU General Public License v2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Text Domain: base
Tags: one-column, two-columns
Theme URI:
*/
/* ---------------------------------------------------------
   1. Vendors
   2. Utils
   3. Base
   4. Components
   5. Layout
   6. Pages
   7. Themes
   ---------------------------------------------------------*/
/* ---------------------------------------------------------
	1. Vendors
   ---------------------------------------------------------*/
/* ---------------------------------------------------------
                      Bootstrap-4-grid-custom
   ---------------------------------------------------------*/
/* ---------------------------------------------------------
                      Fontello
   ---------------------------------------------------------*/
@font-face {
  font-family: 'fontello';
  src: url("../fonts/Fontello/font/icon.eot?85982189");
  src: url("../fonts/Fontello/font/icon.eot?85982189#iefix") format("embedded-opentype"), url("../fonts/Fontello/font/icon.woff2?85982189") format("woff2"), url("../fonts/Fontello/font/icon.woff?85982189") format("woff"), url("../fonts/Fontello/font/icon.ttf?85982189") format("truetype"), url("../fonts/Fontello/font/icon.svg?85982189#icon") format("svg");
  font-weight: normal;
  font-style: normal;
}

/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */
/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */
/*
@media screen and (-webkit-min-device-pixel-ratio:0) {
  @font-face {
    font-family: 'icon';
    src: url('../font/icon.svg?70780428#icon') format('svg');
  }
}
*/
[class^="icon-"]:before, [class*=" icon-"]:before {
  font-family: "fontello";
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  /* opacity: .8; */
  /* For safety - reset parent styles, that can break glyph codes*/
  font-variant: normal;
  text-transform: none;
  /* fix buttons height, for twitter bootstrap */
  line-height: 1em;
  /* Animation center compensation - margins should be symmetric */
  /* remove if not needed */
  margin-left: .2em;
  /* you can be more comfortable with increased icons size */
  /* font-size: 120%; */
  /* Font smoothing. That was taken from TWBS */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Uncomment for 3D effect */
  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */
}

.icon-eye:before {
  content: '\e800';
}

/* '' */
.icon-eye-1:before {
  content: '\e80f';
}

/* '' */
/* ---------------------------------------------------------
                      Fontello
   ---------------------------------------------------------*/
/* ---------------------------------------------------------
                      FontAwesome - 5.0.4
   ---------------------------------------------------------*/
/* ---------------------------------------------------------
                      Mmenu
   ---------------------------------------------------------*/
/* ---------------------------------------------------------
                      Humburgers
   ---------------------------------------------------------*/
/* ---------------------------------------------------------
                      Owl-carousel
   ---------------------------------------------------------*/
/* ---------------------------------------------------------
                      Fotorama
   ---------------------------------------------------------*/
/* ---------------------------------------------------------
                      Selectize
   ---------------------------------------------------------*/
/*!
 * animate.css -http://daneden.me/animate
 * Version - 3.5.2
 * Licensed under the MIT license - http://opensource.org/licenses/MIT
 *
 * Copyright (c) 2017 Daniel Eden
 */
.animated {
  -webkit-animation-duration: 1s;
       -o-animation-duration: 1s;
          animation-duration: 1s;
  -webkit-animation-fill-mode: both;
       -o-animation-fill-mode: both;
          animation-fill-mode: both;
}

/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */
/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */
/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */
/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */
/* Slick slider styles */
.slick-slider {
  position: relative;
  display: block;
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent;
}

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0;
}

.slick-list:focus {
  outline: none;
}

.slick-list.dragging {
  cursor: pointer;
  cursor: hand;
}

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;
}

.slick-track:before, .slick-track:after {
  content: "";
  display: table;
}

.slick-track:after {
  clear: both;
}

.slick-loading .slick-track {
  visibility: hidden;
}

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none;
}

[dir="rtl"] .slick-slide {
  float: right;
}

.slick-slide img {
  display: block;
}

.slick-slide.slick-loading img {
  display: none;
}

.slick-slide.dragging img {
  pointer-events: none;
}

.slick-initialized .slick-slide {
  display: block;
}

.slick-loading .slick-slide {
  visibility: hidden;
}

.slick-vertical .slick-slide {
  display: block;
  height: auto;
  border: 1px solid transparent;
}

.slick-arrow.slick-hidden {
  display: none;
}

/*!
 * Gutenberg
 *
 * MIT Fabien Sa
 * https://github.com/BafS/Gutenberg
 */
/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Correct the line height in all browsers.
     * 2. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
@media print {
  html {
    /* Change the default font family in all browsers (opinionated). */
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    line-height: 1.15;
    /* 1 */
    -ms-text-size-adjust: 100%;
    /* 2 */
    -webkit-text-size-adjust: 100%;
    /* 2 */
  }
  /* Sections
         ========================================================================== */
  /**
       * Remove the margin in all browsers (opinionated).
       */
  body {
    margin: 0;
  }
  /**
       * Add the correct display in IE 9-.
       */
  article,
  aside,
  footer,
  header,
  nav,
  section {
    display: block;
  }
  /**
       * Correct the font size and margin on `h1` elements within `section` and
       * `article` contexts in Chrome, Firefox, and Safari.
       */
  h1 {
    font-size: 2em;
    margin: 0.67em 0;
  }
  /* Grouping content
         ========================================================================== */
  /**
       * Add the correct display in IE 9-.
       */
  figcaption,
  figure {
    display: block;
  }
  /**
       * Add the correct margin in IE 8.
       */
  figure {
    margin: 1em 40px;
  }
  /**
       * 1. Add the correct box sizing in Firefox.
       * 2. Show the overflow in Edge and IE.
       */
  hr {
    -webkit-box-sizing: content-box;
       -moz-box-sizing: content-box;
            box-sizing: content-box;
    /* 1 */
    height: 0;
    /* 1 */
    overflow: visible;
    /* 2 */
  }
  /**
       * Add the correct display in IE.
       */
  main {
    display: block;
  }
  /**
       * 1. Correct the inheritance and scaling of font size in all browsers.
       * 2. Correct the odd `em` font sizing in all browsers.
       */
  pre {
    font-family: monospace, monospace;
    /* 1 */
    font-size: 1em;
    /* 2 */
  }
  /* Links
         ========================================================================== */
  /**
       * 1. Remove the gray background on active links in IE 10.
       * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
       */
  a {
    background-color: transparent;
    /* 1 */
    -webkit-text-decoration-skip: objects;
    /* 2 */
  }
  /* Text-level semantics
         ========================================================================== */
  /**
       * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
       * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
       */
  abbr[title] {
    border-bottom: none;
    /* 1 */
    text-decoration: underline;
    /* 2 */
    -webkit-text-decoration: underline dotted;
       -moz-text-decoration: underline dotted;
            text-decoration: underline dotted;
    /* 2 */
  }
  /**
       * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
       */
  b,
  strong {
    font-weight: inherit;
  }
  /**
       * Add the correct font weight in Chrome, Edge, and Safari.
       */
  b,
  strong {
    font-weight: bolder;
  }
  /**
       * 1. Correct the inheritance and scaling of font size in all browsers.
       * 2. Correct the odd `em` font sizing in all browsers.
       */
  code,
  kbd,
  samp {
    font-family: monospace, monospace;
    /* 1 */
    font-size: 1em;
    /* 2 */
  }
  /**
       * Add the correct font style in Android 4.3-.
       */
  dfn {
    font-style: italic;
  }
  /**
       * Add the correct background and color in IE 9-.
       */
  mark {
    background-color: #ff0;
    color: #000;
  }
  /**
       * Add the correct font size in all browsers.
       */
  small {
    font-size: 80%;
  }
  /**
       * Prevent `sub` and `sup` elements from affecting the line height in
       * all browsers.
       */
  sub,
  sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  /* Embedded content
         ========================================================================== */
  /**
       * Add the correct display in IE 9-.
       */
  audio,
  video {
    display: inline-block;
  }
  /**
       * Add the correct display in iOS 4-7.
       */
  audio:not([controls]) {
    display: none;
    height: 0;
  }
  /**
       * Remove the border on images inside links in IE 10-.
       */
  img {
    border-style: none;
  }
  /**
       * Hide the overflow in IE.
       */
  svg:not(:root) {
    overflow: hidden;
  }
  /* Forms
         ========================================================================== */
  /**
       * 1. Change the font styles in all browsers (opinionated).
       * 2. Remove the margin in Firefox and Safari.
       */
  button,
  input,
  optgroup,
  select,
  textarea {
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    /* 1 */
    font-size: 100%;
    /* 1 */
    line-height: 1.15;
    /* 1 */
    margin: 0;
    /* 2 */
  }
  /**
       * Show the overflow in IE.
       */
  button {
    overflow: visible;
  }
  /**
       * Remove the inheritance of text transform in Edge, Firefox, and IE.
       * 1. Remove the inheritance of text transform in Firefox.
       */
  button,
  select {
    /* 1 */
    text-transform: none;
  }
  /**
       * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
       *    controls in Android 4.
       * 2. Correct the inability to style clickable types in iOS and Safari.
       */
  button,
  html [type="button"],
  [type="reset"],
  [type="submit"] {
    -webkit-appearance: button;
    /* 2 */
  }
  button,
  [type="button"],
  [type="reset"],
  [type="submit"] {
    /**
         * Remove the inner border and padding in Firefox.
         */
    /**
         * Restore the focus styles unset by the previous rule.
         */
  }
  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0;
  }
  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText;
  }
  /**
       * Show the overflow in Edge.
       */
  input {
    overflow: visible;
  }
  /**
       * 1. Add the correct box sizing in IE 10-.
       * 2. Remove the padding in IE 10-.
       */
  [type="checkbox"],
  [type="radio"] {
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
            box-sizing: border-box;
    /* 1 */
    padding: 0;
    /* 2 */
  }
  /**
       * Correct the cursor style of increment and decrement buttons in Chrome.
       */
  [type="number"]::-webkit-inner-spin-button,
  [type="number"]::-webkit-outer-spin-button {
    height: auto;
  }
  /**
       * 1. Correct the odd appearance in Chrome and Safari.
       * 2. Correct the outline style in Safari.
       */
  [type="search"] {
    -webkit-appearance: textfield;
    /* 1 */
    outline-offset: -2px;
    /* 2 */
    /**
         * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
         */
  }
  [type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  /**
       * 1. Correct the inability to style clickable types in iOS and Safari.
       * 2. Change font properties to `inherit` in Safari.
       */
  ::-webkit-file-upload-button {
    -webkit-appearance: button;
    /* 1 */
    font: inherit;
    /* 2 */
  }
  /**
       * Correct the padding in Firefox.
       */
  fieldset {
    padding: 0.35em 0.75em 0.625em;
  }
  /**
       * 1. Correct the text wrapping in Edge and IE.
       * 2. Correct the color inheritance from `fieldset` elements in IE.
       * 3. Remove the padding so developers are not caught out when they zero out
       *    `fieldset` elements in all browsers.
       */
  legend {
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
            box-sizing: border-box;
    /* 1 */
    display: table;
    /* 1 */
    max-width: 100%;
    /* 1 */
    padding: 0;
    /* 3 */
    color: inherit;
    /* 2 */
    white-space: normal;
    /* 1 */
  }
  /**
       * 1. Add the correct display in IE 9-.
       * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
       */
  progress {
    display: inline-block;
    /* 1 */
    vertical-align: baseline;
    /* 2 */
  }
  /**
       * Remove the default vertical scrollbar in IE.
       */
  textarea {
    overflow: auto;
  }
  /* Interactive
         ========================================================================== */
  /*
       * Add the correct display in Edge, IE, and Firefox.
       */
  details {
    display: block;
  }
  /*
       * Add the correct display in all browsers.
       */
  summary {
    display: list-item;
  }
  /*
       * Add the correct display in IE 9-.
       */
  menu {
    display: block;
  }
  /* Scripting
         ========================================================================== */
  /**
       * Add the correct display in IE 9-.
       */
  canvas {
    display: inline-block;
  }
  /**
       * Add the correct display in IE.
       */
  template {
    display: none;
  }
  /* Hidden
         ========================================================================== */
  /**
       * Add the correct display in IE 10-.
       */
  [hidden] {
    display: none;
  }
  * {
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
  }
  *,
  *:before,
  *:after,
  p:first-letter,
  div:first-letter,
  blockquote:first-letter,
  li:first-letter,
  p:first-line,
  div:first-line,
  blockquote:first-line,
  li:first-line {
    background: transparent !important;
    -webkit-box-shadow: none !important;
            box-shadow: none !important;
    text-shadow: none !important;
  }
  html {
    font-size: 16px;
    margin: 0;
    padding: 0;
  }
  body {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    background: #fff !important;
    color: #000 !important;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 1rem;
    line-height: 1.5;
    margin: 0 auto;
    text-rendering: optimizeLegibility;
  }
  p,
  blockquote,
  table,
  ul,
  ol,
  dl {
    margin-bottom: 1.5rem;
    margin-top: 0;
  }
  p:last-child,
  ul:last-child,
  ol:last-child {
    margin-bottom: 0;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: #000;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    line-height: 1.2;
    margin-bottom: 0.75rem;
    margin-top: 0;
  }
  h1 {
    font-size: 2.5rem;
  }
  h2 {
    font-size: 2rem;
  }
  h3 {
    font-size: 1.75rem;
  }
  h4 {
    font-size: 1.5rem;
  }
  h5 {
    font-size: 1.25rem;
  }
  h6 {
    font-size: 1rem;
  }
  a, a:visited {
    color: #000;
    text-decoration: underline;
    word-wrap: break-word;
  }
  table {
    border-collapse: collapse;
  }
  thead {
    display: table-header-group;
  }
  table,
  th,
  td {
    border-bottom: 1px solid #000;
  }
  td,
  th {
    padding: 8px 16px;
  }
  code,
  pre,
  kbd {
    border: 1px solid #bbb;
    font-family: Menlo, Monaco, Consolas, "Courier New", monospace;
    font-size: 85%;
  }
  code,
  kbd {
    padding: 3px;
  }
  pre {
    margin-bottom: 1.5rem;
    padding: 10px 12px;
  }
  pre code,
  pre kbd {
    border: 0;
  }
  ::-webkit-input-placeholder {
    color: transparent;
  }
  :-moz-placeholder {
    color: transparent;
  }
  ::-moz-placeholder {
    color: transparent;
  }
  :-ms-input-placeholder {
    color: transparent;
  }
  blockquote {
    border: 0;
    border-left: 5px solid #bbb;
    margin-left: 1px;
    padding: 12px 1.5rem;
  }
  blockquote:first-child {
    margin-top: 0;
  }
  blockquote p:last-child,
  blockquote ul:last-child,
  blockquote ol:last-child {
    margin-bottom: 0;
  }
  blockquote footer {
    display: block;
    font-size: 80%;
  }
  img {
    border: 0;
    display: block;
    max-width: 100% !important;
    vertical-align: middle;
  }
  hr {
    border: 0;
    border-bottom: 2px solid #bbb;
    height: 0;
    margin: 2.25rem 0;
    padding: 0;
  }
  dt {
    font-weight: bold;
  }
  dd {
    margin: 0;
    margin-bottom: 0.75rem;
  }
  abbr[title],
  acronym[title] {
    border: 0;
    text-decoration: none;
  }
  table,
  blockquote,
  pre,
  code,
  figure,
  li,
  hr,
  ul,
  ol,
  a,
  tr {
    page-break-inside: avoid;
  }
  h2,
  h3,
  h4,
  p,
  a {
    orphans: 3;
    widows: 3;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    page-break-after: avoid;
    page-break-inside: avoid;
  }
  h1 + p,
  h2 + p,
  h3 + p {
    page-break-before: avoid;
  }
  img {
    page-break-after: auto;
    page-break-before: auto;
    page-break-inside: avoid;
  }
  pre {
    white-space: pre-wrap !important;
    word-wrap: break-word;
  }
  body {
    padding-bottom: 2.54cm;
    padding-left: 1.8cm;
    padding-right: 1.8cm;
    padding-top: 2.54cm;
  }
  a[href^='http://']:after, a[href^='https://']:after, a[href^='ftp://']:after {
    content: " (" attr(href) ")";
    font-size: 80%;
  }
  abbr[title]:after,
  acronym[title]:after {
    content: " (" attr(title) ")";
  }
  .page-break,
  .page-break-before {
    page-break-before: always;
  }
  .page-break-after {
    page-break-after: always;
  }
  .no-print {
    display: none;
  }
  a.no-reformat:after {
    content: '';
  }
  abbr[title].no-reformat:after,
  acronym[title].no-reformat:after {
    content: '';
  }
  .no-reformat abbr:after,
  .no-reformat acronym:after,
  .no-reformat a:after {
    content: '';
  }
}

@font-face {
  font-family: 'icomoon';
  src: url("/fonts/IcoMoon/fonts/icomoon.eot?vfgrp5");
  src: url("/fonts/IcoMoon/fonts/icomoon.eot?vfgrp5#iefix") format("embedded-opentype"), url("/fonts/IcoMoon/fonts/icomoon.ttf?vfgrp5") format("truetype"), url("/fonts/IcoMoon/fonts/icomoon.woff?vfgrp5") format("woff"), url("/fonts/IcoMoon/fonts/icomoon.svg?vfgrp5#icomoon") format("svg");
  font-weight: normal;
  font-style: normal;
}

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon-spin:after {
  content: "\e922";
}

.icon-twitter:after {
  content: "\e924";
}

.icon-film:after {
  content: "\e928";
}

.icon-home3:after {
  content: "\e926";
}

.icon-mobile:after {
  content: "\e958";
}

.icon-play3:after {
  content: "\ea1c";
}

.icon-facebook:after {
  content: "\ea90";
}

.icon-rss:after {
  content: "\ea9b";
}

.icon-searches:after {
  content: "\e929";
}

.icon-comments:after {
  content: "\e92a";
}

.icon-comment:after {
  content: "\e92b";
}

.icon-mail-envelope-closed:after {
  content: "\e906";
}

.icon-mail-envelope-open:after {
  content: "\e907";
}

.icon-mail-closed:after {
  content: "\e92c";
}

.icon-mail-open:after {
  content: "\e92d";
}

.icon-folder:after {
  content: "\e92e";
}

.icon-heart:after {
  content: "\e92f";
}

.icon-view-show:after {
  content: "\e930";
}

.icon-backward:after {
  content: "\e931";
}

.icon-forward:after {
  content: "\e932";
}

.icon-shopping-cart:after {
  content: "\e933";
}

.icon-suitcase:after {
  content: "\e927";
}

.icon-mail:after {
  content: "\e905";
}

.icon-bird:after {
  content: "\e934";
}

.icon-arrow-wave:after {
  content: "\e935";
}

.icon-plus:after {
  content: "\e936";
}

.icon-figure:after {
  content: "\e925";
}

.icon-cup:after {
  content: "\e904";
}

.icon-people .path1:after {
  content: "\e901";
  color: #666666;
}

.icon-people .path2:after {
  content: "\e902";
  margin-left: -1.6669921875em;
  color: #666666;
}

.icon-people .path3:after {
  content: "\e903";
  margin-left: -1.6669921875em;
  color: black;
}

.icon-snake:after {
  content: "\e900";
}

/* ---------------------------------------------------------
	2. Utils
   ---------------------------------------------------------*/
/* ---------------------------------------------------------
	3. Base
   ---------------------------------------------------------*/
/* ---------------------------------------------------------
                           Varibles
   ---------------------------------------------------------*/
/* ---------------------------------------------------------
                           Helpers
   ---------------------------------------------------------*/
.clearfix:after {
  content: '';
  display: block;
  clear: both;
}

@media (max-width: 767px) {
  .hide-tablet {
    display: none !important;
  }
}

@media (min-width: 768px) {
  .hide-desktop {
    display: none !important;
  }
}

@media (min-width: 768px) {
  .visible-sm {
    display: none !important;
  }
}

@media (max-width: 1023px) {
  .visible-lg {
    display: none !important;
  }
}

.text-left {
  text-align: left !important;
}

.text-center {
  text-align: center !important;
}

.text-right {
  text-align: right !important;
}

.img {
  display: block;
  max-width: 100%;
  height: auto;
  vertical-align: top;
}

span {
  display: inline-block;
}

#wrapper {
  position: relative;
  overflow: hidden;
  width: 100%;
}

@media (max-width: 1023px) {
  #wrapper {
    font-size: 11px;
  }
}

.wrap, .wrap-flex {
  max-width: 1174px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 15px;
  padding-right: 15px;
}

@media (min-width: 768px) {
  .wrap-flex {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center;
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  clip: rect(0 0 0 0);
  overflow: hidden;
}

/* ---------------------------------------------------------
                           Reset
   ---------------------------------------------------------*/
html {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}

*, *:before, *:after {
  -webkit-box-sizing: inherit;
     -moz-box-sizing: inherit;
          box-sizing: inherit;
}

* {
  max-height: 1000000px;
}

html, body {
  height: 100%;
}

body {
  position: relative;
  overflow-x: hidden;
  opacity: 1;
  color: black;
  background: #525659;
  font: 16px/1.6 "Arial", "Helvetica Neue", "Helvetica", sans-serif;
  min-width: 320px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@media screen and (max-width: 767px) {
  body {
    font-size: 9px;
  }
}

@media screen and (min-width: 320px) and (max-width: 768px) {
  body {
    font-size: -webkit-calc(0.5625rem + ((16 - 9) / (768 - 320)) * 100vw - ((16 - 9) / (768 - 320)) * 320px);
    font-size: calc(0.5625rem + ((16 - 9) / (768 - 320)) * 100vw - ((16 - 9) / (768 - 320)) * 320px);
  }
}

.font-face-observer body {
  font-family: "MyriadProRegular";
}

/* ---------------------------------------------------------
                         Wp-reset
   ---------------------------------------------------------*/
.widget {
  margin-bottom: 1.6em;
}

.widget:after {
  content: '';
  display: block;
  clear: both;
}

.widget ul {
  padding-left: 2em;
}

.widget select {
  min-width: 150px;
}

.comment-form label {
  display: block;
  padding-bottom: 4px;
}

.comment-form textarea {
  overflow: auto;
  margin: 0;
  height: 120px;
  min-height: 120px;
}

@media (min-width: 768px) {
  .comment-form textarea {
    width: 500px;
  }
}

@media (min-width: 768px) {
  .comment-form input[type='text'] {
    margin: 0 4px 0 0;
    width: 300px;
  }
}

.comment-form input[type='submit'] {
  display: block;
  float: none;
}

.post-password-form label {
  display: block;
}

.post-password-form input[type='password'] {
  margin: 0 4px 0 0;
  width: 300px;
}

.search-form:after {
  content: '';
  display: block;
  clear: both;
}

.search-form input {
  float: left;
  height: 35px;
  font-size: 16px;
  padding: 5px 10px;
  margin: 0 0 9px;
}

.search-form input[type='search'] {
  margin: 0 4px 9px 0;
  width: 150px;
}

.post-password-form p:after {
  content: '';
  display: block;
  clear: both;
}

.post-password-form input {
  float: left;
  height: 2em;
}

.post-password-form input[type='password'] {
  width: 150px;
}

.comment-form input[type='submit'],
.post-password-form input[type='submit'],
.search-form input[type='submit'] {
  background: #4E978D;
  color: white;
  height: 35px;
  border: none;
  padding: 0 .5em;
}

.comment-form input[type='submit']:hover,
.post-password-form input[type='submit']:hover,
.search-form input[type='submit']:hover {
  opacity: 0.8;
}

.commentlist {
  margin: 0 0 1.6em;
}

.commentlist .edit-link {
  margin: 0;
}

.commentlist .avatar-holder {
  float: left;
  margin: 0 1.6em 4px 0;
}

.commentlist-item .commentlist-item {
  padding: 0;
}

@media (min-width: 768px) {
  .commentlist-item .commentlist-item {
    padding: 0 0 0 2em;
  }
}

.comment,
.commentlist-holder {
  overflow: hidden;
}

.commentlist-item .commentlist-item,
.commentlist-item + .commentlist-item {
  padding-top: 1.6em;
}

.widget_calendar #next {
  text-align: right;
}

.gallery-item dt {
  float: none;
  padding: 0;
}

.navigation,
.navigation-comments {
  position: relative;
  vertical-align: middle;
  margin-bottom: 1.6em;
}

.navigation .screen-reader-text,
.navigation-comments .screen-reader-text {
  position: absolute;
  left: -99999px;
}

.navigation .page-numbers,
.navigation-comments .page-numbers {
  display: inline-block;
  vertical-align: middle;
  padding: 0 .4em;
}

@media (max-width: 767px) {
  .navigation .page-numbers,
  .navigation-comments .page-numbers {
    padding: 0;
  }
}

.navigation a,
.navigation-comments a {
  color: #4E978D;
}

.navigation .next,
.navigation .prev,
.navigation-comments .next,
.navigation-comments .prev {
  display: inline-block;
  vertical-align: middle;
  max-width: 50%;
  background: #4E978D;
  color: white;
  padding: .4em;
  text-decoration: none;
}

.navigation .next:hover,
.navigation .prev:hover,
.navigation-comments .next:hover,
.navigation-comments .prev:hover {
  opacity: .8;
}

@media (max-width: 767px) {
  .navigation .next,
  .navigation .prev,
  .navigation-comments .next,
  .navigation-comments .prev {
    padding: .2em;
  }
}

.navigation-single {
  margin-bottom: 1.6em;
}

.navigation-single:after {
  content: '';
  display: block;
  clear: both;
}

.navigation-single .next,
.navigation-single .prev {
  float: left;
  vertical-align: middle;
  max-width: 50%;
  background: #4E978D;
  color: white;
  text-decoration: none;
}

.navigation-single .next:hover,
.navigation-single .prev:hover {
  opacity: .8;
}

.navigation-single .next a,
.navigation-single .prev a {
  color: inherit;
  text-decoration: none;
  padding: .4em;
  display: block;
}

@media (max-width: 767px) {
  .navigation-single .next a,
  .navigation-single .prev a {
    padding: .2em;
  }
}

.navigation-single .next {
  float: right;
}

.wp-caption {
  max-width: 100%;
  clear: both;
  border: 4px solid #f3f3f3;
  padding: .4em;
  margin-bottom: 1.6em;
}

.wp-caption img {
  margin: 0;
  vertical-align: top;
}

.wp-caption p {
  margin: .4em 0 0;
}

div.aligncenter {
  margin: 0 auto 1.6em;
}

img.aligncenter {
  display: block;
  margin: 0 auto;
}

.alignleft {
  float: left;
  margin: 0 1.6em 4px 0;
}

.alignright {
  float: right;
  margin: 0 0 4px 1.6em;
}

.mejs-container {
  margin-bottom: 1.6em;
}

.wp-caption-text,
.gallery,
.alignnone,
.gallery-caption,
.sticky,
.bypostauthor {
  height: auto;
}

@media (max-width: 1023px) {
  iframe {
    width: 100%;
    height: auto;
    min-height: 300px;
  }
}

#wp-calendar td,
#wp-calendar th {
  padding: 4px;
  font-size: 14px;
}

/* ---------------------------------------------------------
                        Normalize
   ---------------------------------------------------------*/
/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
     -moz-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
     -moz-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

/* ---------------------------------------------------------
                           Font-face
   ---------------------------------------------------------*/
@font-face {
  font-family: "HelveticaNeueLTStd-Roman";
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/HelveticaNeueLTStd-Roman/HelveticaNeueLTStd-Roman.woff2") format("woff2");
  src: url("../fonts/HelveticaNeueLTStd-Roman/HelveticaNeueLTStd-Roman.woff") format("woff"), url("../fonts/HelveticaNeueLTStd-Roman/HelveticaNeueLTStd-Roman.eot") format("embedded-opentype"), url("../fonts/HelveticaNeueLTStd-Roman/HelveticaNeueLTStd-Roman.eot?#iefix") format("embedded-opentype"), url("../fonts/HelveticaNeueLTStd-Roman/HelveticaNeueLTStd-Roman.ttf") format("truetype");
}

@font-face {
  font-family: "HelveticaNeueLTStd-Md";
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/HelveticaNeueLTStd-Md/HelveticaNeueLTStd-Md.woff2") format("woff2");
  src: url("../fonts/HelveticaNeueLTStd-Md/HelveticaNeueLTStd-Md.woff") format("woff"), url("../fonts/HelveticaNeueLTStd-Md/HelveticaNeueLTStd-Md.eot") format("embedded-opentype"), url("../fonts/HelveticaNeueLTStd-Md/HelveticaNeueLTStd-Md.eot?#iefix") format("embedded-opentype"), url("../fonts/HelveticaNeueLTStd-Md/HelveticaNeueLTStd-Md.ttf") format("truetype");
}

@font-face {
  font-family: "HelveticaNeueLTStd-Bd";
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/HelveticaNeueLTStd-Bd/HelveticaNeueLTStd-Bd.woff2") format("woff2");
  src: url("../fonts/HelveticaNeueLTStd-Bd/HelveticaNeueLTStd-Bd.woff") format("woff"), url("../fonts/HelveticaNeueLTStd-Bd/HelveticaNeueLTStd-Bd.eot") format("embedded-opentype"), url("../fonts/HelveticaNeueLTStd-Bd/HelveticaNeueLTStd-Bd.eot?#iefix") format("embedded-opentype"), url("../fonts/HelveticaNeueLTStd-Bd/HelveticaNeueLTStd-Bd.ttf") format("truetype");
}

@font-face {
  font-family: "HelveticaNeue-Bold";
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/HelveticaNeue-Bold/helvetica-neue-bold.woff2") format("woff2");
  src: url("../fonts/HelveticaNeue-Bold/helvetica-neue-bold.woff") format("woff"), url("../fonts/HelveticaNeue-Bold/helvetica-neue-bold.eot") format("embedded-opentype"), url("../fonts/HelveticaNeue-Bold/helvetica-neue-bold.eot?#iefix") format("embedded-opentype"), url("../fonts/HelveticaNeue-Bold/helvetica-neue-bold.ttf") format("truetype");
}

@font-face {
  font-family: "MyriadProRegular";
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/MyriadProRegular/MyriadProRegular.woff2") format("woff2");
  src: url("../fonts/MyriadProRegular/MyriadProRegular.woff") format("woff"), url("../fonts/MyriadProRegular/MyriadProRegular.eot") format("embedded-opentype"), url("../fonts/MyriadProRegular/MyriadProRegular.eot?#iefix") format("embedded-opentype"), url("../fonts/MyriadProRegular/MyriadProRegular.ttf") format("truetype");
}

@font-face {
  font-family: "MyriadPro-It";
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/MyriadPro-It/MyriadPro-It.woff2") format("woff2");
  src: url("../fonts/MyriadPro-It/MyriadPro-It.woff") format("woff"), url("../fonts/MyriadPro-It/MyriadPro-It.eot") format("embedded-opentype"), url("../fonts/MyriadPro-It/MyriadPro-It.eot?#iefix") format("embedded-opentype"), url("../fonts/MyriadPro-It/MyriadPro-It.ttf") format("truetype");
}

@font-face {
  font-family: "MyriadPro-BlackIt";
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/MyriadPro-BlackIt/MyriadPro-BlackIt.woff2") format("woff2");
  src: url("../fonts/MyriadPro-BlackIt/MyriadPro-BlackIt.woff") format("woff"), url("../fonts/MyriadPro-BlackIt/MyriadPro-BlackIt.eot") format("embedded-opentype"), url("../fonts/MyriadPro-BlackIt/MyriadPro-BlackIt.eot?#iefix") format("embedded-opentype"), url("../fonts/MyriadPro-BlackIt/MyriadPro-BlackIt.ttf") format("truetype");
}

@font-face {
  font-family: "MyriadProSemiBold";
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/MyriadProSemiBold/MyriadProSemiBold.woff2") format("woff2");
  src: url("../fonts/MyriadProSemiBold/MyriadProSemiBold.woff") format("woff"), url("../fonts/MyriadProSemiBold/MyriadProSemiBold.eot") format("embedded-opentype"), url("../fonts/MyriadProSemiBold/MyriadProSemiBold.eot?#iefix") format("embedded-opentype"), url("../fonts/MyriadProSemiBold/MyriadProSemiBold.ttf") format("truetype");
}

@font-face {
  font-family: "MyriadProBlackSmCnIt";
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/MyriadProBlackSmCnIt/MyriadProBlackSemiCondensedItalic.woff2") format("woff2");
  src: url("../fonts/MyriadProBlackSmCnIt/MyriadProBlackSemiCondensedItalic.woff") format("woff"), url("../fonts/MyriadProBlackSmCnIt/MyriadProBlackSemiCondensedItalic.eot") format("embedded-opentype"), url("../fonts/MyriadProBlackSmCnIt/MyriadProBlackSemiCondensedItalic.eot?#iefix") format("embedded-opentype"), url("../fonts/MyriadProBlackSmCnIt/MyriadProBlackSemiCondensedItalic.ttf") format("truetype");
}

@font-face {
  font-family: "NevisBold";
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/NevisBold/nevis-webfont.woff2") format("woff2");
  src: url("../fonts/NevisBold/nevis-webfont.woff") format("woff"), url("../fonts/NevisBold/nevis-webfont.eot") format("embedded-opentype"), url("../fonts/NevisBold/nevis-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/NevisBold/nevis-webfont.ttf") format("truetype");
}

@font-face {
  font-family: "OfficinaSerITCStd-ExtraBoldIta";
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/OfficinaSerITCStd-ExtraBoldIta/OfficinaSerITCStd-ExtraBoldIta.woff2") format("woff2");
  src: url("../fonts/OfficinaSerITCStd-ExtraBoldIta/OfficinaSerITCStd-ExtraBoldIta.woff") format("woff"), url("../fonts/OfficinaSerITCStd-ExtraBoldIta/OfficinaSerITCStd-ExtraBoldIta.eot") format("embedded-opentype"), url("../fonts/OfficinaSerITCStd-ExtraBoldIta/OfficinaSerITCStd-ExtraBoldIta.eot?#iefix") format("embedded-opentype"), url("../fonts/OfficinaSerITCStd-ExtraBoldIta/OfficinaSerITCStd-ExtraBoldIta.ttf") format("truetype");
}

/* ---------------------------------------------------------
                        Typography
   ---------------------------------------------------------*/
h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6,
.h {
  font-weight: bold;
  margin: 0;
  color: black;
  line-height: 1.2;
}

.fontFaceObserver h1, .fontFaceObserver .h1, .fontFaceObserver
h2, .fontFaceObserver .h2, .fontFaceObserver
h3, .fontFaceObserver .h3, .fontFaceObserver
h4, .fontFaceObserver .h4, .fontFaceObserver
h5, .fontFaceObserver .h5, .fontFaceObserver
h6, .fontFaceObserver .h6, .fontFaceObserver
.h {
  font-family: 'NevisBold';
}

h1, .h1 {
  font-size: 3.75em;
  color: #2a2a2a;
}

h2, .h2 {
  font-size: 1.6em;
}

h3, .h3 {
  font-size: 1.5em;
}

h4, .h4 {
  font-size: 1.17em;
  line-height: 1.43;
  text-transform: capitalize;
}

h4__small, .h4__small {
  font-size: 0.6em;
  margin-left: 2px;
  text-transform: uppercase;
  vertical-align: super;
}

h5, .h5 {
  font-size: 19em;
}

h6, .h6 {
  font-size: 17em;
}

p {
  margin: 0 0 1em;
}

a {
  color: #327595;
}

a:hover, a:focus {
  text-decoration: none;
}

.container {
  margin: 0 auto;
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-width: 320px) {
  .container {
    max-width: 700px;
    padding: 0 15px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 100%;
  }
}

/* ---------------------------------------------------------
	4. Components
   ---------------------------------------------------------*/
.btn {
  -webkit-transition: all 0.3s ease;
  -o-transition: all 0.3s ease;
  transition: all 0.3s ease;
  display: inline-block;
  position: relative;
  margin: 0;
  outline: none;
  border: 0;
  border-radius: 3px;
  background-color: #317191;
  padding: 0.4em 0.5em 0em 0.9em;
  min-width: 100px;
  text-align: center;
  text-transform: capitalize;
  text-decoration: none;
  text-shadow: 0 1px 0 rgba(0, 0, 0, 0.43);
  line-height: 1.85em;
  color: white;
  font-size: 1.17em;
}

.font-face-observer .btn {
  font-family: 'HelveticaNeueLTStd-Md';
}

.btn::after {
  display: inline-block;
  position: relative;
  bottom: -4px;
  left: 5px;
  width: 26px;
  height: 19px;
  font-family: 'icomoon';
  font-size: 1.16667em;
}

.btn_gray {
  -webkit-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 rgba(255, 255, 255, 0.24), inset 0 15px 10px 0 #606a7d;
          box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 rgba(255, 255, 255, 0.24), inset 0 15px 10px 0 #606a7d;
  background-color: #49515f;
}

.btn_gray:focus, .btn_gray:hover, .btn_gray:active {
  -webkit-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 rgba(255, 255, 255, 0.24), inset 0 15px 10px 0 #788398;
          box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 rgba(255, 255, 255, 0.24), inset 0 15px 10px 0 #788398;
  background-color: #5f6a7c;
}

.btn_white {
  -webkit-box-shadow: inset 0 15px 10px 0 #edf1f5, 0 1px 0 0 rgba(148, 148, 148, 0.8), inset 0 1px 0 0 #fff;
          box-shadow: inset 0 15px 10px 0 #edf1f5, 0 1px 0 0 rgba(148, 148, 148, 0.8), inset 0 1px 0 0 #fff;
  background-color: #dfe2eb;
  color: #49515f;
}

.btn_white:focus, .btn_white:hover, .btn_white:active {
  -webkit-box-shadow: inset 0 15px 20px 0 #dde4ec, 0 1px 0 0 rgba(148, 148, 148, 0.8), inset 0 1px 0 0 #fff;
          box-shadow: inset 0 15px 20px 0 #dde4ec, 0 1px 0 0 rgba(148, 148, 148, 0.8), inset 0 1px 0 0 #fff;
  background-color: #c0c6d7;
}

.btn_blue-light {
  -webkit-box-shadow: inset 0 1px 1px 0 #bdcedf, inset 0 20px 10px 0 #89a8c6, 0 -0.3px 0 0.7px #6785a5;
          box-shadow: inset 0 1px 1px 0 #bdcedf, inset 0 20px 10px 0 #89a8c6, 0 -0.3px 0 0.7px #6785a5;
  background-color: #789BBE;
}

.btn_blue-light:focus, .btn_blue-light:hover, .btn_blue-light:active {
  -webkit-box-shadow: inset 0 1px 1px 0 #b3c6da, inset 0 20px 10px 0 #82a3c3, 0 -0.3px 0 0.7px #6785a5;
          box-shadow: inset 0 1px 1px 0 #b3c6da, inset 0 20px 10px 0 #82a3c3, 0 -0.3px 0 0.7px #6785a5;
  background-color: #6e93b9;
}

.btn_blue {
  -webkit-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 rgba(255, 255, 255, 0.24), inset 0 20px 10px 0 #439ab6;
          box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 rgba(255, 255, 255, 0.24), inset 0 20px 10px 0 #439ab6;
  background-color: #327595;
}

.btn_blue:focus, .btn_blue:hover, .btn_blue:active {
  -webkit-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 #89bed7, inset 0 20px 10px 0 #66afc6;
          box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 #89bed7, inset 0 20px 10px 0 #66afc6;
  background-color: #3f93bb;
}

.btn_blue-dark {
  -webkit-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 rgba(255, 255, 255, 0.24), inset 0 20px 10px 0 #456aa9;
          box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 rgba(255, 255, 255, 0.24), inset 0 20px 10px 0 #456aa9;
  background-color: #345283;
}

.btn_blue-dark:focus, .btn_blue-dark:hover, .btn_blue-dark:active {
  -webkit-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 #829fce, inset 0 20px 10px 0 #6284bf;
          box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 #829fce, inset 0 20px 10px 0 #6284bf;
  background-color: #4269a8;
}

.btn_red {
  -webkit-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 rgba(255, 255, 255, 0.24), inset 0 15px 10px 0 #BF5C46;
          box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 rgba(255, 255, 255, 0.24), inset 0 15px 10px 0 #BF5C46;
  background-color: #4E978D;
  min-width: 40px;
}

.btn_red:focus, .btn_red:hover, .btn_red:active {
  -webkit-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 rgba(255, 255, 255, 0.24), inset 0 15px 10px 0 #c36651;
          box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3), inset 0 1px 0 0 rgba(255, 255, 255, 0.24), inset 0 15px 10px 0 #c36651;
  background-color: #57a89d;
}

.preloader {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 100;
  background: #1a1a1a;
}

.preloader .pulse {
  position: relative;
  top: 50vh;
  left: 50%;
  margin-top: -40px;
  margin-left: -40px;
}

.preloader .pulse::before, .preloader .pulse::after {
  position: absolute;
  border: 5px solid #323232;
  border-radius: 500px;
  width: 80px;
  height: 80px;
  content: '';
}

.preloader .pulse::before {
  -webkit-animation: pulse-outer 0.8s ease-in infinite;
       -o-animation: pulse-outer 0.8s ease-in infinite;
          animation: pulse-outer 0.8s ease-in infinite;
}

.preloader .pulse::after {
  -webkit-animation: pulse-inner 0.8s linear infinite;
       -o-animation: pulse-inner 0.8s linear infinite;
          animation: pulse-inner 0.8s linear infinite;
}

@-webkit-keyframes pulse-outer {
  0% {
    opacity: 1;
    filter: alpha(opacity=100);
  }
  50% {
    opacity: 0.5;
    filter: alpha(opacity=50);
  }
  100% {
    opacity: 0;
    filter: alpha(opacity=0);
  }
}

@-o-keyframes pulse-outer {
  0% {
    opacity: 1;
    filter: alpha(opacity=100);
  }
  50% {
    opacity: 0.5;
    filter: alpha(opacity=50);
  }
  100% {
    opacity: 0;
    filter: alpha(opacity=0);
  }
}

@keyframes pulse-outer {
  0% {
    opacity: 1;
    filter: alpha(opacity=100);
  }
  50% {
    opacity: 0.5;
    filter: alpha(opacity=50);
  }
  100% {
    opacity: 0;
    filter: alpha(opacity=0);
  }
}

@-webkit-keyframes pulse-inner {
  0% {
    opacity: 0;
    filter: alpha(opacity=0);
    -webkit-transform: scale(0);
            transform: scale(0);
  }
  100% {
    opacity: 1;
    filter: alpha(opacity=100);
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}

@-o-keyframes pulse-inner {
  0% {
    opacity: 0;
    filter: alpha(opacity=0);
    -o-transform: scale(0);
       transform: scale(0);
  }
  100% {
    opacity: 1;
    filter: alpha(opacity=100);
    -o-transform: scale(1);
       transform: scale(1);
  }
}

@keyframes pulse-inner {
  0% {
    opacity: 0;
    filter: alpha(opacity=0);
    -webkit-transform: scale(0);
         -o-transform: scale(0);
            transform: scale(0);
  }
  100% {
    opacity: 1;
    filter: alpha(opacity=100);
    -webkit-transform: scale(1);
         -o-transform: scale(1);
            transform: scale(1);
  }
}

#hellopreloader_preload {
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 99999;
  background: #000 url("http://hello-site.ru//main/images/preloads/rings.svg") center center no-repeat;
  -webkit-background-size: 41px 41px;
          background-size: 41px;
  width: 100%;
  height: 100%;
}

.top {
  -webkit-transition: all 0.3s ease;
  -o-transition: all 0.3s ease;
  transition: all 0.3s ease;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: fixed;
  right: -100px;
  bottom: 25px;
  opacity: 0.2;
  z-index: 12;
  border-radius: 50%;
  background: white;
  cursor: pointer;
  width: 50px;
  height: 50px;
  text-align: center;
  line-height: 50px;
  color: #666;
  font-size: 26px;
}

.top:hover {
  opacity: 1;
  background: #4E978D;
  color: white;
}

.top:hover .top__arrow {
  border-color: white;
}

.top.active {
  right: 25px;
}

.top__icon {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin: 18px auto;
  width: 17px;
  height: 20px;
}

.top__arrow {
  -webkit-transition: all 0.3s ease;
  -o-transition: all 0.3s ease;
  transition: all 0.3s ease;
  width: 11px;
  height: 11px;
  display: block;
  -webkit-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
       -o-transform: rotate(-45deg);
          transform: rotate(-45deg);
  margin: auto;
  border-top: 2px solid #4E978D;
  border-right: 2px solid #4E978D;
}

.top__arrow_last {
  margin-top: -5px;
}

header,
section,
footer {
  position: relative;
  background-repeat: no-repeat;
  background-position: center;
  -webkit-background-size: cover;
          background-size: cover;
}

.inverse {
  background: #1a1a1a;
  color: white;
}

.overlay::before {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: rgba(61, 61, 61, 0.92);
  content: '';
}

.articles {
  position: relative;
  z-index: 1;
  background: #525659;
}

.container {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
}

.news {
  margin: 0 auto;
  width: 60%;
  max-width: 600px;
}

@media (max-width: 767px) {
  .news {
    width: -webkit-calc( (((100% - (20px * (12 - 1))) / 12) * 12) + ( 20px * (12 - 1)));
    width: calc( (((100% - (20px * (12 - 1))) / 12) * 12) + ( 20px * (12 - 1)));
  }
}

.post {
  margin: 50px 0;
  border-radius: 5px;
  background: white;
  padding: 35px 25px 10px 35px;
}

.post__content {
  margin-top: 20px;
}

.content {
  font-size: 1.5em;
}

.content__info {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.content__date {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin-top: 10px;
}

.info__text, .info__img {
  width: -webkit-calc( (((100% - (20px * (12 - 1))) / 12) * 6) + ( 20px * (6 - 1)));
  width: calc( (((100% - (20px * (12 - 1))) / 12) * 6) + ( 20px * (6 - 1)));
}

.info__text {
  margin-bottom: 0;
  line-height: 1em;
  color: #CСС;
}

.info__img {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  height: 200px;
  overflow: hidden;
}

@media (max-width: 767px) {
  .info__img {
    height: 150px;
  }
}

.info__image {
  display: block;
  width: auto;
  height: 100%;
}

.date__day {
  text-transform: capitalize;
  color: #4E978D;
}

.date__views {
  color: #7a8390;
}

.date__views::before {
  color: #C0C0C0;
}

/* ---------------------------------------------------------
	5. Layout
   ---------------------------------------------------------*/
/* ---------------------------------------------------------
	6. Pages
   ---------------------------------------------------------*/
/* ---------------------------------------------------------
	7. Themes
   ---------------------------------------------------------*/

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
